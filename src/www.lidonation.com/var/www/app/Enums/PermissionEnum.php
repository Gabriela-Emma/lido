<?php

namespace App\Enums;

// a Laravel specific base class
use Spatie\Enum\Laravel\Enum;

/**
 * @method static self create_catalyst_groups()
 * @method static self create_catalyst_users()
 * @method static self create_categories()
 * @method static self create_comments()
 * @method static self create_definitions()
 * @method static self create_discussions()
 * @method static self create_events()
 * @method static self create_every_epochs()
 * @method static self create_external_posts()
 * @method static self create_funds()
 * @method static self create_giveaways()
 * @method static self create_insights()
 * @method static self create_legacy_comments()
 * @method static self create_larning_modules()
 * @method static self create_links()
 * @method static self create_media()
 * @method static self create_mint()
 * @method static self create_mints()
 * @method static self create_nfts()
 * @method static self create_news()
 * @method static self create_podcasts()
 * @method static self create_podcast_seasons()
 * @method static self create_podcast_shows()
 * @method static self create_posts()
 * @method static self create_permissions()
 * @method static self create_promos()
 * @method static self create_proposals()
 * @method static self create_questions()
 * @method static self create_question_answers()
 * @method static self create_quizzes()
 * @method static self create_ratings()
 * @method static self create_reviews()
 * @method static self create_rewards()
 * @method static self create_roles()
 * @method static self create_settings()
 * @method static self create_snippets()
 * @method static self create_tags()
 * @method static self create_teams()
 * @method static self create_translations()
 * @method static self create_twitter_attendances()
 * @method static self create_twitter_events()
 * @method static self create_users()
 * @method static self create_votes()
 * @method static self create_withdrawals()
 * @method static self read_catalyst_groups()
 * @method static self read_catalyst_users()
 * @method static self read_categories()
 * @method static self read_comments()
 * @method static self read_definitions()
 * @method static self read_discussions()
 * @method static self read_events()
 * @method static self read_every_epochs()
 * @method static self read_external_posts()
 * @method static self read_funds()
 * @method static self read_giveaways()
 * @method static self read_insights()
 * @method static self read_links()
 * @method static self read_legacy_comments()
 * @method static self read_learning_modules()
 * @method static self read_media()
 * @method static self read_mint()
 * @method static self read_mints()
 * @method static self read_nfts()
 * @method static self read_news()
 * @method static self read_podcasts()
 * @method static self read_podcast_shows()
 * @method static self read_podcast_seasons()
 * @method static self read_posts()
 * @method static self read_permissions()
 * @method static self read_proposals()
 * @method static self read_promos()
 * @method static self read_questions()
 * @method static self read_question_answers()
 * @method static self read_quizzes()
 * @method static self read_ratings()
 * @method static self read_reviews()
 * @method static self read_rewards()
 * @method static self read_roles()
 * @method static self read_settings()
 * @method static self read_snippets()
 * @method static self read_tags()
 * @method static self read_teams()
 * @method static self read_translations()
 * @method static self read_twitter_attendances()
 * @method static self read_twitter_events()
 * @method static self read_users()
 * @method static self read_votes()
 * @method static self read_withdrawals()
 * @method static self update_catalyst_groups()
 * @method static self update_catalyst_users()
 * @method static self update_admins()
 * @method static self update_categories()
 * @method static self update_comments()
 * @method static self update_definitions()
 * @method static self update_discussions()
 * @method static self update_events()
 * @method static self update_every_epochs()
 * @method static self update_external_posts()
 * @method static self update_funds()
 * @method static self update_giveaways()
 * @method static self update_insights()
 * @method static self update_links()
 * @method static self update_learning_modules()
 * @method static self update_legacy_comments()
 * @method static self update_media()
 * @method static self update_mint()
 * @method static self update_nfts()
 * @method static self update_news()
 * @method static self update_podcasts()
 * @method static self update_podcast_shows()
 * @method static self update_podcast_seasons()
 * @method static self update_posts()
 * @method static self update_permissions()
 * @method static self update_proposals()
 * @method static self update_promos()
 * @method static self update_ratings()
 * @method static self update_questions()
 * @method static self update_question_answers()
 * @method static self update_quizzes()
 * @method static self update_reviews()
 * @method static self update_rewards()
 * @method static self update_roles()
 * @method static self update_settings()
 * @method static self update_snippets()
 * @method static self update_tags()
 * @method static self update_teams()
 * @method static self update_translations()
 * @method static self update_twitter_attendances()
 * @method static self update_twitter_events()
 * @method static self update_users()
 * @method static self update_votes()
 * @method static self update_withdrawals()
 * @method static self delete_catalyst_groups()
 * @method static self delete_catalyst_users()
 * @method static self delete_admins()
 * @method static self delete_categories()
 * @method static self delete_comments()
 * @method static self delete_definitions()
 * @method static self delete_discussions()
 * @method static self delete_events()
 * @method static self delete_every_epochs()
 * @method static self delete_external_posts()
 * @method static self delete_funds()
 * @method static self delete_giveaways()
 * @method static self delete_insights()
 * @method static self delete_links()
 * @method static self delete_legacy_comments()
 * @method static self delete_learning_modules()
 * @method static self delete_media()
 * @method static self delete_mint()
 * @method static self delete_news()
 * @method static self delete_nfts()
 * @method static self delete_podcasts()
 * @method static self delete_podcast_seasons()
 * @method static self delete_podcast_shows()
 * @method static self delete_posts()
 * @method static self delete_permissions()
 * @method static self delete_proposals()
 * @method static self delete_promos()
 * @method static self delete_questions()
 * @method static self delete_question_answers()
 * @method static self delete_quizzes()
 * @method static self delete_ratings()
 * @method static self delete_reviews()
 * @method static self delete_rewards()
 * @method static self delete_roles()
 * @method static self delete_settings()
 * @method static self delete_snippets()
 * @method static self delete_tags()
 * @method static self delete_teams()
 * @method static self delete_translations()
 * @method static self delete_twitter_attendances()
 * @method static self delete_twitter_events()
 * @method static self delete_users()
 * @method static self delete_votes()
 * @method static self delete_withdrawals()

 * @method static self translate_articles()
 */
final class PermissionEnum extends Enum
{
    protected static function values(): \Closure
    {
        return fn (string $name): string|int => str_replace('_', ' ', mb_strtolower($name));
    }
}
