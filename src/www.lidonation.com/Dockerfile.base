FROM php:8.2-fpm-alpine3.17 as cc

RUN apk add --no-cache musl-dev git curl

RUN curl –proto ‘=https’ –tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

RUN cd /opt && git clone https://github.com/input-output-hk/catalyst-core.git

WORKDIR /opt/catalyst-core

RUN source $HOME/.cargo/env && cargo build --release -p audit

FROM php:8.2-fpm-alpine3.17

COPY --from=cc /opt/catalyst-core/target/release/ /opt/catalyst-tools

RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" > /etc/apk/repositories \
    && echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
    && echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories \
    && echo "http://dl-cdn.alpinelinux.org/alpine/v3.17/main" >> /etc/apk/repositories \
    && apk upgrade -U -a \
    && apk add -Uuv \
    autoconf \
    bash \
    chromium \
    ffmpeg \
    fcgi \
    font-noto-emoji \
    freetype \
    freetype-dev \
    gifsicle \
    gcc \
    g++ \
    git \
    harfbuzz \
    imagemagick \
    imagemagick-dev \
    jpegoptim \
    libstdc++ \
    libtool \
    libjpeg-turbo-dev \
    libzip-dev \
    libpng-dev \
    make \
    netcat-openbsd \
    postgresql-dev \
    pcre-dev \
    nginx \
    nodejs \
    npm \
    nss \
    optipng \
    pngquant \
    postgresql-client \
    supervisor \
    ttf-freefont \
    wqy-zenhei \
    && rm -rf /var/cache/apk/*

ENV CHROME_BIN=/usr/bin/chromium-browser \
    CHROME_PATH=/usr/lib/chromium/ \
    PUPPETEER_EXECUTABLE_PATH="/usr/bin/chromium-browser"

# Download and install composer
COPY --from=composer:2.3 /usr/bin/composer /usr/bin/composer

RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include

RUN docker-php-ext-install -j$(nproc) pdo pdo_pgsql pdo_mysql mysqli pgsql opcache pcntl gd bcmath posix zip exif intl

RUN printf "\n" | pecl install redis imagick && docker-php-ext-enable redis imagick

RUN npm install --global --unsafe-perm puppeteer

RUN apk del autoconf g++ libtool make pcre-dev
