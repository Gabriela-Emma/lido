version: "3.9"

services:
  traefik:
    image: "traefik:v3.0"
    command:
      - "--log.level=INFO"
      - "--providers.docker=true"
      - "--api.insecure=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entryPoints.web.forwardedHeaders.insecure"
      - "traefik.backend.loadbalancer.stickiness.sameSite=none"
      #      - "--providers.file.directory=/configuration/"
      #      - "--providers.file.watch=true"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
    ports:
      # - "80:80"
      - "8880:80"
      - "8008:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - lido

  ## Databases
  lidolovelace-search-service:
    container_name: meili
    image: getmeili/meilisearch:v1.2.0-rc.0

    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: v8hlDV0yMAHHlIurYupj
      MEILI_ENV: development
    volumes:
      - type: volume
        source: search_db
        target: /meili_data
        volume:
          nocopy: true
    networks:
      - lido

  pgAdmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=hello@lidonation.com
      - PGADMIN_DEFAULT_PASSWORD=alj2340aaALJAF2341408AUUZLJK
    ports:
      - "8888:80"
    networks:
      - lido

  redis:
    image: redis:7.2-rc1-alpine3.17
    command: [ sh, -c, "rm -f /data/dump.rdb && redis-server --save ''" ]
    networks:
      - lido

  nocodb:
    depends_on:
      webdb:
        condition: service_healthy
    image: nocodb/nocodb:0.107.0-beta.0
    ports:
      - "8088:8080"
    volumes:
      - nc_data:/usr/app/data
    environment:
      NC_REDIS_URL: 'redis://redis:6379/4'
      NC_MIGRATIONS_DISABLED: 'yes'
      NC_INVITE_ONLY_SIGNUP: 'yes'
    networks:
      - lido

  webdb:
    image: postgres:15.2-alpine3.17
    container_name: lido_web_db
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB=lidoweb
      - POSTGRES_PASSWORD=ASLJ023470AlserLFH
      - POSTGRES_USER=llovelace
      - POSTGRES_POSTGRES_PASSWORD=alj2340aaALJAF2341408AUUZLJK
      - "ES_JAVA_OPTS=-Xms1024m -Xmx3072m"
    ports:
      - "5436:5432"
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 10s
      timeout: 2s
      retries: 10
    volumes:
      - type: volume
        source: web_db
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - lido

  ## Website
  lidolovelace-scheduler:
    image: lidonation
    depends_on:
      - webdb
      - redis
    env_file:
      - ./src/www.lidonation.com/opt/app.env
    environment:
      APP_URL: 'http://localhost:8880'
      APP_SETUP: "true"
      PHP_OPCACHE_ENABLE: 0
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      CARDANO_NETWORK_ARGUMENT: "--testnet-magic 2"
      CARDANO_NETWORK: "testnet"
      CARDANO_NODE_SOCKET_PATH: /ipc/node.socket
      CONTAINER_ROLE: "scheduler"
      DB_CONNECTION: pgsqlWeb
      FPM_SERVICE: '127.0.0.1'
      XDG_CONFIG_HOME: /var/www/html
      POSTGRESQL_DB_SYNC_DB_HOST: postgres_dbsync
      POSTGRESQL_DB_SYNC_PASSWORD: v8hlDV0yMAHHlIurYupj
      POSTGRESQL_DB_SYNC_DB: cexplorer
      POSTGRESQL_DB_SYNC_USER: postgres
      POSTGRESQL_WEB_DB_HOST: webdb
      POSTGRESQL_WEB_DB: lidoweb
      POSTGRESQL_WEB_USER: llovelace
      POSTGRESQL_WEB_PASSWORD: ASLJ023470AlserLFH
      MEDIA_DISK: public
      TELESCOPE_USE_DARK_THEME: "true"
    build:
      context: ./src/www.lidonation.com
      args: {}
      dockerfile: ./Dockerfile.dev
    volumes:
      - type: volume
        source: node-ipc
        target: /ipc
        volume:
          nocopy: true
      - ./src/www.lidonation.com/var/www:/var/www/html:cached
      - ./data/www/data:/data
    networks:
      - lido

  lidolovelace-queue:
    image: lidonation
    depends_on:
      - webdb
      - redis
    env_file:
      - ./src/www.lidonation.com/opt/app.env
    environment:
      APP_URL: 'http://localhost:8880'
      APP_SETUP: "true"
      PHP_OPCACHE_ENABLE: 0
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      CARDANO_NETWORK_ARGUMENT: "--testnet-magic 2"
      CARDANO_NETWORK: "testnet"
      CARDANO_NODE_SOCKET_PATH: /ipc/node.socket
      CONTAINER_ROLE: "queue"
      DB_CONNECTION: pgsqlWeb
      FPM_SERVICE: '127.0.0.1'
      POSTGRESQL_DB_SYNC_DB_HOST: postgres_dbsync
      POSTGRESQL_DB_SYNC_PASSWORD: v8hlDV0yMAHHlIurYupj
      MEILISEARCH_KEY: v8hlDV0yMAHHlIurYupj
      MEILISEARCH_HOST: "http://lidolovelace-search-service:7700"
      POSTGRESQL_DB_SYNC_DB: cexplorer
      POSTGRESQL_DB_SYNC_USER: postgres
      XDG_CONFIG_HOME: /var/www/html
      POSTGRESQL_WEB_DB_HOST: webdb
      POSTGRESQL_WEB_DB: lidoweb
      POSTGRESQL_WEB_USER: llovelace
      POSTGRESQL_WEB_PASSWORD: ASLJ023470AlserLFH
      MEDIA_DISK: public
      TELESCOPE_USE_DARK_THEME: "true"
    build:
      context: ./src/www.lidonation.com
      args: {}
      dockerfile: ./Dockerfile.dev
    volumes:
      - type: volume
        source: node-ipc
        target: /ipc
        volume:
          nocopy: true
      - ./src/www.lidonation.com/var/www:/var/www/html:cached
      - ./data/www/data:/data
    networks:
      - lido

  lidolovelace-web-fpm-service:
    image: lidonation
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.docker.network=lido"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.backend.loadbalancer.stickiness.sameSite=none"
      - "traefik.http.routers.lidolovelace-web-fpm-service.rule=Host(`localhost`)"
      - "traefik.http.routers.lidolovelace-web-fpm-service.entrypoints=web"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    depends_on:
      - webdb
      - redis
    env_file:
      - ./src/www.lidonation.com/opt/app.env
    environment:
      APP_SETUP: "true"
      PHP_OPCACHE_ENABLE: 0
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      GOOGLE_APPLICATION_CREDENTIALS: '/data/google-credentials.json'
      CARDANO_NETWORK_ARGUMENT: "--testnet-magic 2"
      CARDANO_NETWORK: "testnet"
      CARDANO_NODE_SOCKET_PATH: /ipc/node.socket
      CONTAINER_ROLE: "app"
      FPM_SERVICE: '127.0.0.1'
      MEDIA_DISK: public
      TELESCOPE_USE_DARK_THEME: "true"
      XDG_CONFIG_HOME: /var/www/html
    build:
      context: ./src/www.lidonation.com
      args: {}
      dockerfile: ./Dockerfile.dev
    expose:
      - 80
    volumes:
      - type: volume
        source: node-ipc
        target: /ipc
        volume:
          nocopy: true
      - ./src/www.lidonation.com/var/www:/var/www/html:cached
      - ./data/www/data:/data
    networks:
      - lido
    deploy:
      mode: replicated
      replicas: ${LIDO_APP_REPLICAS:-1}

secrets:
  postgres_db:
    file: ./src/pool/config/db-sync/secrets/postgres_db
  postgres_password:
    file: ./src/pool/config/db-sync/secrets/postgres_password
  postgres_user:
    file: ./src/pool/config/db-sync/secrets/postgres_user

volumes:
  node-ipc:
  web_db:
  search_db:
  nc_data: {}

networks:
  lido:
    driver: bridge
