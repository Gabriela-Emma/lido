kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ .Values.namespace }}
  name: "{{ $.Chart.Name }}-scheduler"
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources:
      - deployments
      - replicasets
      - pods
      - pods/list
      - pods/exec
    verbs:
      - 'list'
      - 'get'
  - apiGroups: [ "" ]
    resources: [ "pods/exec", "pods/*"  ]
    verbs: [ "create" ]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "{{ $.Chart.Name }}-activevoteplans"
  namespace: {{ .Values.namespace }}
subjects:
  - kind: ServiceAccount
    name: "sa-{{ $.Chart.Name }}-activevoteplans"
    apiGroup: ""
roleRef:
  kind: Role
  name: "{{ $.Chart.Name }}-activevoteplans"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "sa-{{ $.Chart.Name }}-activevoteplans"
  namespace: {{ .Values.namespace }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: {{ .Values.namespace }}
  name: "{{ $.Chart.Name }}-activevoteplans"
spec:
  schedule: "*/15 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 1800
      template:
        spec:
          volumes:
            - name: "{{ $.Chart.Name }}-catalyst-utils-pv"
              persistentVolumeClaim:
                claimName: "{{ .Values.namespace }}-catalyst-utils-pvc"          
          initContainers:
            - name: fetch-archive
              image: alpine:latest
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: "{{ $.Chart.Name }}-catalyst-utils-pv"
                  mountPath: /leader1stuff
              command:
                - "/bin/sh"
                - "-c"
                - |
                  apk add curl zstd jq
                  rm -rf /leader1stuff/*
                  mkdir -p /leader1stuff/persist/leader-1

                  LATEST_ARCHIVE_ID_FROM_LIDO=$(curl -s https://www.lidonation.com/api/catalyst-explorer/ledger-snapshots/latest | jq -r '.data.snapshot_id')
                  URL=$(curl -s https://archiver.projectcatalyst.io/api/v1/archives/$LATEST_ARCHIVE_ID_FROM_LIDO/download | jq -r .url)
                  curl -o /leader1stuff/archive.tar.zstd "$URL"
                  zstd -d /leader1stuff/archive.tar.zstd
                  tar -xvf /leader1stuff/archive.tar

                  rm -f /leader1stuff/archive.tar.zstd /leader1stuff/archive.tar
          containers:
            - name: jormungandr
              image: registry.lidonation.com/lidonation/lidonation/jormungandr:fund10
              imagePullPolicy: Always
              volumeMounts:
                - name: "{{ $.Chart.Name }}-catalyst-utils-pv"
                  mountPath: /leader1stuff
              ports:
                - containerPort: 10000
                  name: jormungandr
              env:
                - name: STORAGE_PATH
                  value: /leader1stuff/persist/leader-1
                - name: GENESIS_PATH
                  value: /leader1stuff/artifacts/block0.bin
            - name: query-api
              image: bitnami/kubectl:1.27.5-debian-11-r17
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: "{{ $.Chart.Name }}-catalyst-utils-pv"
                  mountPath: /leader1stuff
              command:
                - "/bin/sh"
                - "-c"
                - |
                  apt-get install -y jq curl 
                  sleep 5m
                  curl http://127.0.0.1:10000/api/v0/vote/active/plans
                  if [[ $? -ne 0 ]]; then
                    echo "Failed to get the active vote plans."
                    exit 1
                  fi
                  curl http://127.0.0.1:10000/api/v0/vote/active/plans > /leader1stuff/activevotingplans.proposals.json
                  kubectl cp /leader1stuff/activevotingplans.proposals.json $(kubectl get pods -l service=lidolovelace-web-fpm --field-selector=status.phase=Running -o=jsonpath='{.items[0].metadata.name}'):/var/www/storage/app/catalyst/activevotingplans.proposals.json
                  kill -9 $(pidof jormungandr)
          imagePullSecrets:
            - name: {{ .Values.image.pullSecret }}
          restartPolicy: Never    
