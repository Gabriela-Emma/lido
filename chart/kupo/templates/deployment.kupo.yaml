apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ $.Chart.Name }}"
  namespace: {{ .Values.namespace }}
  labels:
    app: "{{ $.Chart.Name }}"
    role: kupo
    network: {{ .Values.services.cardano.config.CARDANO_NETWORK }}    
spec:
  selector:
    matchLabels:
      app: "{{ $.Chart.Name }}"
      release: {{ .Release.Name }}
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: "{{ $.Chart.Name }}-service"
  template:
    metadata:
      labels:
        app: "{{ $.Chart.Name }}"
        chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
        role: relay
        network: {{ .Values.services.cardano.config.CARDANO_NETWORK }}
        release: {{ .Release.Name }}
        service: "kupo"
    spec:      
      serviceAccountName: ""
      volumes:
        - name: node-ipc
          emptyDir: {}
        - name: "{{ $.Chart.Name }}-pv"
          persistentVolumeClaim:
            claimName: "{{ .Values.namespace }}-data-cardano-kupo-pvc"
        - name: node-configurations
          configMap:
            name: "lidolovelace-cardano-configurations-configmap"
      containers:
        - name: app
          image: "{{ .Values.services.kupo.image.repository }}:{{ .Values.services.kupo.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [
              "--host", "0.0.0.0",
              "--node-socket", "/ipc/node.socket",
              "--node-config", "/tmp/config/config.json",
              "--workdir", "/db",
              "--match", "*/*",
          ]
          resources:
            limits:
              memory: 8192Mi
              cpu: 4
            requests:
              cpu: 800m
              memory: 512Mi
          envFrom:
            - configMapRef:
                name: "lidolovelace-cardano-configmap"
          env:
            - name: LOGGER_MIN_SEVERITY
              value: info
            - name: CARDANO_NODE_CONFIG_PATH
              value: "/config/config.json"
          ports:
            - name: kupo
              containerPort: 1442
              protocol: TCP
          volumeMounts:
            - mountPath: /ipc
              name: node-ipc
            - name: node-configurations
              mountPath: /tmp/config
            - name: "{{ $.Chart.Name }}-pv"
              mountPath: /db
              subPath: db
              readOnly: false
        - name: sidecar
          image: busybox:1.28
          args:
            - sleep
            - "2592000"
          volumeMounts:
            - name: "{{ $.Chart.Name }}-1-pv"
              mountPath: /data
              readOnly: false
        - name: ipc
          image: alpine/socat:1.7.4.4
          env:
            - name: PORT
              value: "30112"
          command: [
            "sh",
            "-c",
            "socat TCP-LISTEN:${PORT},fork UNIX-CLIENT:/ipc/node.socket,ignoreeof"
          ]
          volumeMounts:
            - name: node-ipc
              mountPath: /ipc
          ports:
            - name: ipc
              containerPort: 30130
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}