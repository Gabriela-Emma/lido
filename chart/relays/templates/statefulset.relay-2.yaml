{{- if eq .Values.services.cardano.config.CARDANO_NETWORK "main" -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ $.Chart.Name }}-cardano-relay-2"
  namespace: {{ .Values.namespace }}
  labels:
    app: "{{ $.Chart.Name }}-cardano-relay-2"
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    role: relay
    network: {{ .Values.services.cardano.config.CARDANO_NETWORK }}
    release: {{ .Release.Name }}
    client: {{.Values.labels.client}}
    domain: {{.Values.labels.domain}}
    service: {{.Values.labels.service}}
spec:
  selector:
    matchLabels:
      app: "{{ $.Chart.Name }}-cardano-relay-2"
      release: {{ .Release.Name }}
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: "{{ $.Chart.Name }}-cardano-relay-2-service"
  template:
    metadata:
      labels:
        app: "{{ $.Chart.Name }}-cardano-relay-2"
        chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
        role: relay
        network: {{ .Values.services.cardano.config.CARDANO_NETWORK }}
        release: {{ .Release.Name }}
        client: {{.Values.labels.client}}
        domain: {{.Values.labels.domain}}
        service: "relay"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      -  "{{ $.Chart.Name }}-cardano-relay-2"
              topologyKey: kubernetes.io/hostname
      serviceAccountName: ""
      volumes:
        - name: node-ipc
          emptyDir: {}
        - name: "{{ $.Chart.Name }}-cardano-relay-2-pv"
          persistentVolumeClaim:
            claimName: "{{ .Values.namespace }}-data-relay2-pvc"
        - name: node-configurations
          configMap:
            name: "{{ $.Chart.Name }}-cardano-configurations-configmap"
      containers:
        - name: relay
          image: "{{ .Values.services.cardano.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["entrypoint"]
          args: ["--start"]
          resources:
            requests:
              cpu: "1"
              memory: 16384Mi
            limits:
              cpu: "7"
              memory: 36864Mi
          env:
            - name: NODE_NAME
              value: "relay2"
            - name: NODE_PORT
              value: "{{ .Values.services.cardano.config.RELAY2_PORT }}"
            - name: HOST_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: "{{ $.Chart.Name }}-cardano-configmap"
          ports:
            - name: prometheus
              containerPort: 11798
            - name: crelay2
              containerPort: {{ .Values.services.cardano.config.RELAY2_PORT }}
          volumeMounts:
            - mountPath: /ipc
              name: node-ipc
            - name: node-configurations
              mountPath: /tmp/config
            - name: "{{ $.Chart.Name }}-cardano-relay-2-pv"
              mountPath: /data
              readOnly: false
        - name: sidecar
          image: busybox:1.28
          args:
            - sleep
            - "1000"
          volumeMounts:
            - name: "{{ $.Chart.Name }}-cardano-relay-2-pv"
              mountPath: /data
              readOnly: false
        - name: ipc
          image: alpine/socat:1.7.4.4-r0
          env:
            - name: PORT
              value: "30112"
          command: [
              "sh",
              "-c",
              "socat TCP-LISTEN:${PORT},fork UNIX-CLIENT:/ipc/node.socket,ignoreeof"
          ]
          volumeMounts:
            - name: node-ipc
              mountPath: /ipc
          ports:
            - name: ipc
              containerPort: 30112
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
{{- end -}}