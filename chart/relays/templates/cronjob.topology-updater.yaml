kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ .Values.namespace }}
  name: "{{ $.Chart.Name }}-topology-updater"
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources:
      - deployments
      - replicasets
      - pods
      - pods/list
      - pods/exec
    verbs:
      - 'list'
      - 'get'
  - apiGroups: [ "" ]
    resources: [ "pods/exec" ]
    verbs: [ "create" ]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "{{ $.Chart.Name }}-topology-updater"
  namespace: {{ .Values.namespace }}
subjects:
  - kind: ServiceAccount
    name: "sa-{{ $.Chart.Name }}-topology-updater"
    apiGroup: ""
roleRef:
  kind: Role
  name: "{{ $.Chart.Name }}-topology-updater"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "sa-{{ $.Chart.Name }}-topology-updater"
  namespace: {{ .Values.namespace }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ $.Chart.Name }}-topology-updater"
  namespace: {{ .Values.namespace }}
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: "sa-{{ $.Chart.Name }}-topology-updater"
          containers:
            - name: topology-updater
              image: bitnami/kubectl:1.24.9-debian-11-r10
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
                - -c
                - kubectl exec $(kubectl get pods -l role=relay --field-selector=status.phase=Running -o=jsonpath='{.items[0].metadata.name}') -c app -- /cntools/cnode/scripts/topologyUpdater.sh
          restartPolicy: Never